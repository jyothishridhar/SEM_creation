"""
``numpy.linalg``
================

The NumPy linear algebra functions rely on BLAS and LAPACK to provide efficient
low level implementations of standard linear algebra algorithms. Those
libraries may be provided by NumPy itself using C versions of a subset of their
reference implementations but, when possible, highly optimized libraries that
take advantage of specialized processor functionality are preferred. Examples
of such libraries are OpenBLAS, MKL (TM), and ATLAS. Because those libraries
are multithreaded and processor dependent, environmental variables and external
packages such as threadpoolctl may be needed to control the number of threads
or specify the processor architecture.

- OpenBLAS: https://www.openblas.net/
- threadpoolctl: https://github.com/joblib/threadpoolctl

Please note that the most-used linear algebra functions in NumPy are present in
the main ``numpy`` namespace rather than in ``numpy.linalg``.  There are:
``dot``, ``vdot``, ``inner``, ``outer``, ``matmul``, ``tensordot``, ``einsum``,
``einsum_path`` and ``kron``.

Functions present in numpy.linalg are listed below.


Matrix and vector products
--------------------------

<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357
   cross
   multi_dot
   matrix_power
   tensordot
   matmul
<<<<<<< HEAD
=======
=======
   multi_dot
   matrix_power
>>>>>>> 7ef3263bf8ad3edda12247249d99ea6f271604bd
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357

Decompositions
--------------

   cholesky
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357
   outer
   qr
   svd
   svdvals
<<<<<<< HEAD
=======
=======
   qr
   svd
>>>>>>> 7ef3263bf8ad3edda12247249d99ea6f271604bd
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357

Matrix eigenvalues
------------------

   eig
   eigh
   eigvals
   eigvalsh

Norms and other numbers
-----------------------

   norm
<<<<<<< HEAD
   matrix_norm
   vector_norm
=======
<<<<<<< HEAD
   matrix_norm
   vector_norm
=======
>>>>>>> 7ef3263bf8ad3edda12247249d99ea6f271604bd
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357
   cond
   det
   matrix_rank
   slogdet
<<<<<<< HEAD
   trace (Array API compatible)
=======
<<<<<<< HEAD
   trace (Array API compatible)
=======
>>>>>>> 7ef3263bf8ad3edda12247249d99ea6f271604bd
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357

Solving equations and inverting matrices
----------------------------------------

   solve
   tensorsolve
   lstsq
   inv
   pinv
   tensorinv

<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357
Other matrix operations
-----------------------

   diagonal (Array API compatible)
   matrix_transpose (Array API compatible)

<<<<<<< HEAD
=======
=======
>>>>>>> 7ef3263bf8ad3edda12247249d99ea6f271604bd
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357
Exceptions
----------

   LinAlgError

"""
# To get sub-modules
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357
from . import linalg  # deprecated in NumPy 2.0
from . import _linalg
from ._linalg import *

__all__ = _linalg.__all__.copy()
<<<<<<< HEAD
=======
=======
from . import linalg
from .linalg import *

__all__ = linalg.__all__.copy()
>>>>>>> 7ef3263bf8ad3edda12247249d99ea6f271604bd
>>>>>>> f381b97f3c4908d545a6261474c75f6902f79357

from numpy._pytesttester import PytestTester
test = PytestTester(__name__)
del PytestTester
